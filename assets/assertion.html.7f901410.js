import{_ as s,o as a,c as n,a as e}from"./app.512a68f7.js";const t={},o=e(`<h1 id="\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u65AD\u8A00" aria-hidden="true">#</a> \u65AD\u8A00</h1><h2 id="\u7C7B\u578B\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u65AD\u8A00" aria-hidden="true">#</a> \u7C7B\u578B\u65AD\u8A00</h2><p>\u53EF\u4EE5\u7528\u6765\u624B\u52A8\u6307\u5B9A\u4E00\u4E2A\u503C\u7684\u7C7B\u578B\u3002</p><h3 id="\u5C16\u62EC\u53F7\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5C16\u62EC\u53F7\u8BED\u6CD5" aria-hidden="true">#</a> \u5C16\u62EC\u53F7\u8BED\u6CD5</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> someValue<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token string">&quot;this is a string&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> strLength<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>someValue<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="as-\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#as-\u8BED\u6CD5" aria-hidden="true">#</a> as \u8BED\u6CD5</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> someValue<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token string">&quot;this is a string&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> strLength<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token punctuation">(</span>someValue <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u975E\u7A7A\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#\u975E\u7A7A\u65AD\u8A00" aria-hidden="true">#</a> \u975E\u7A7A\u65AD\u8A00</h2>`,8),p=[o];function r(i,c){return a(),n("div",null,p)}var d=s(t,[["render",r],["__file","assertion.html.vue"]]);export{d as default};

import{_ as n,o as s,c as a,a as t}from"./app.ecd67b0d.js";const p={},e=t(`<h1 id="generator-\u4E0E-async-await" tabindex="-1"><a class="header-anchor" href="#generator-\u4E0E-async-await" aria-hidden="true">#</a> generator \u4E0E async await</h1><ul><li>Promise \u4E2D\u6709\u5F88\u591A\u95EE\u9898\uFF0C\u5185\u90E8\u8FD8\u662F\u91C7\u7528\u56DE\u8C03\u7684\u65B9\u5F0F\uFF0C\u5982\u679C\u903B\u8F91\u8FC7\u591A\u8FD8\u662F\u53EF\u80FD\u4F1A\u5BFC\u81F4\u56DE\u8C03\u5730\u72F1\u3002</li><li>\u6211\u4EEC\u5E0C\u671B\u5199\u7684\u4EE3\u7801\u66F4\u50CF\u540C\u6B65\u4E00\u4E9B ---&gt;generator\u3002</li><li>koa 1.0 \u7528\u7684\u662F generator koa2.0 \u7528\u7684\u662F async+await\u3002</li></ul><p><strong>generator\uFF08\u751F\u6210\u5668\uFF09\u91CC\u7684\u5173\u952E\u5B57\uFF1A</strong></p><ol><li>\u4EE3\u8868 generator \u51FD\u6570\uFF08\u8FD4\u56DE\u8FED\u4EE3\u5668\u51FD\u6570\uFF09\uFF08\u5199\u5728 function \u4E0E\u51FD\u6570\u540D\u4E4B\u95F4\uFF09</li><li>yield \u8868\u793A\u4EA7\u51FA\u3002</li><li>iterator.next()\u51FD\u6570\u8FD4\u56DE\u7ED3\u679C\u5BF9\u8C61{value:\u8868\u793A\u4E0B\u4E00\u4E2A\u5C06\u8981\u8FD4\u56DE\u7684\u503C, done: \u5F53\u6CA1\u6709\u53EF\u8FD4\u56DE\u7684\u6570\u636E\u65F6\u8FD4\u56DE true\uFF0C\u9884\u793A\u7740\u8FED\u4EE3\u7ED3\u675F,\u5426\u5219\u8FD4\u56DE false}</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6839\u636E\u6307\u9488\u5411\u4E0B\u6267\u884C + switch-case\u6765\u5B9E\u73B0</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">100</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u8C03\u7528 Generator \u51FD\u6570\u540E\uFF0C\u8BE5\u51FD\u6570\u5E76\u4E0D\u6267\u884C\uFF0C\u8FD4\u56DE\u7684\u4E5F\u4E0D\u662F\u51FD\u6570\u8FD0\u884C\u7ED3\u679C\uFF0C</span>
<span class="token comment">// \u800C\u662F\u4E00\u4E2A\u6307\u5411\u5185\u90E8\u72B6\u6001\u7684\u6307\u9488\u5BF9\u8C61\uFF0C\u4E5F\u5C31\u662F\u904D\u5386\u5668\u5BF9\u8C61\uFF08Iterator Object\uFF09</span>
<span class="token keyword">let</span> it <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// iterator\uFF1A\u8FED\u4EE3\u5668</span>
<span class="token comment">// \u4E0B\u4E00\u6B65\uFF0C\u5FC5\u987B\u8C03\u7528\u904D\u5386\u5668\u5BF9\u8C61\u7684next\u65B9\u6CD5\uFF0C\u4F7F\u5F97\u6307\u9488\u79FB\u5411\u4E0B\u4E00\u4E2A\u72B6\u6001\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6BCF\u6B21\u8C03\u7528next\u65B9\u6CD5\uFF0C\u5185\u90E8\u6307\u9488\u5C31\u4ECE\u51FD\u6570\u5934\u90E8\u6216\u4E0A\u4E00\u6B21\u505C\u4E0B\u6765\u7684\u5730\u65B9\u5F00\u59CB\u6267\u884C\uFF0C\u76F4\u5230\u9047\u5230\u4E0B\u4E00\u4E2Ayield\u8868\u8FBE\u5F0F\uFF08\u6216return\u8BED\u53E5\uFF09\u4E3A\u6B62\u3002</span>
<span class="token comment">//\u6362\u8A00\u4E4B\uFF0CGenerator \u51FD\u6570\u662F\u5206\u6BB5\u6267\u884C\u7684\uFF0Cyield\u8868\u8FBE\u5F0F\u662F\u6682\u505C\u6267\u884C\u7684\u6807\u8BB0\uFF0C\u800Cnext\u65B9\u6CD5\u53EF\u4EE5\u6062\u590D\u6267\u884C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value:1,done:false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value:2,done:false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value:3,done:false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {value:100,done:true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B80\u5355\u5B9E\u73B0\u4E0B generator</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">$gen</span><span class="token punctuation">(</span><span class="token parameter">contxt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span><span class="token punctuation">(</span>contxt<span class="token punctuation">.</span>prev <span class="token operator">=</span> context<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u4FDD\u8BC1\u6BCF\u6B21\u8C03\u5B8Cnext\uFF0C\u628Anext\u8D4B\u503C\u7ED9prev\uFF0C\u8D70\u4E0B\u4E2Acase</span>
        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> context<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">return</span> <span class="token number">1</span>
        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> context<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">return</span> <span class="token number">2</span>
        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> context<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token number">3</span> <span class="token keyword">return</span> <span class="token number">3</span>
        <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> context<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">100</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token function-variable function">gen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">prev</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// \u5F53\u524D\u8FD0\u884C\u7684</span>
        <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// \u4E0B\u4E00\u6B21\u8981\u8FD0\u884C\u7684</span>
        <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><span class="token comment">// \u662F\u5426\u5B8C\u6210\u8FD0\u884C</span>
        <span class="token function">stop</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>done <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// \u66F4\u6539\u5B8C\u6210\u72B6\u6001</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token function">next</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">value</span><span class="token operator">:</span><span class="token function">$gen</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">done</span><span class="token operator">:</span> context<span class="token punctuation">.</span>done
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> it <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// {value:1,done:false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// {value:2,done:false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// {value:3,done:false}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// {value:100,done:true}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>co \u6A21\u5757\uFF1A\u81EA\u52A8\u6267\u884C Generator \u51FD\u6570</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>promises<span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">co</span><span class="token punctuation">(</span><span class="token parameter">it</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u5F02\u6B65\u8FED\u4EE3\u91C7\u7528\u51FD\u6570\u7684\u65B9\u5F0F</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> done <span class="token punctuation">}</span> <span class="token operator">=</span> it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>done<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">step</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9012\u5F52</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5931\u8D25\u4E86\u5C31reject</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5C06\u6700\u7EC8\u7ED3\u679C\u629B\u51FA\u53BB</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// switch - case =&gt; babel\u7F16\u8BD1\u540E\u5C31\u662F\u628A\u4E00\u4E2A\u51FD\u6570\u5206\u6210\u591A\u4E2Acase \u91C7\u7528\u6307\u9488\u7684\u65B9\u5F0F\u5411\u4E0B\u79FB\u52A8</span>
  <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token keyword">yield</span> fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;name.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token keyword">yield</span> fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">co</span><span class="token punctuation">(</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>async + await = generator + co</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>promises
<span class="token keyword">async</span> <span class="token function">read</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;name.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> age
<span class="token punctuation">}</span>
<span class="token comment">// async\u65B9\u6CD5\u6267\u884C\u540E\u8FD4\u56DE\u7684\u662F\u4E00\u4E2Apromise</span>
<span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>async + await \u5C31\u662Fgenerator\u7684\u8BED\u6CD5\u7CD6\u3002</p><p><strong>Async / Await \u5982\u4F55\u901A\u8FC7\u540C\u6B65\u7684\u65B9\u5F0F\u5B9E\u73B0\u5F02\u6B65?</strong><br> Async/Await\u5C31\u662F\u4E00\u4E2A\u81EA\u6267\u884C\u7684generate\u51FD\u6570\u3002\u5229\u7528generate\u51FD\u6570\u7684\u7279\u6027\u628A\u5F02\u6B65\u7684\u4EE3\u7801\u5199\u6210\u201C\u540C\u6B65\u201D\u7684\u5F62\u5F0F,\u7B2C\u4E00\u4E2A\u8BF7\u6C42\u7684\u8FD4\u56DE\u503C\u4F5C\u4E3A\u540E\u9762\u4E00\u4E2A\u8BF7\u6C42\u7684\u53C2\u6570,\u5176\u4E2D\u6BCF\u4E00\u4E2A\u53C2\u6570\u90FD\u662F\u4E00\u4E2Apromise\u5BF9\u8C61\u3002</p>`,13),o=[e];function c(l,u){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","generator.html.vue"]]);export{k as default};
